@namespace Mihcelle.Hwavmvid.Modules.Roulette
@implements IDisposable

@using System
@using System.Linq
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Mihcelle.Hwavmvid.Modules.Roulette
@using Mihcelle.Hwavmvid.Modules.Roulette.Shared.Items

@inject RouletteService RouletteService

<div class="p-1 p-sm-2 text-center">

    <div class="my-1">

        <button @onclick="@(() => RouletteService.Play_Clicked())" type="button" class="btn btn-sm btn-primary p-2 p-sm-4 lead" style="font-size: 0.88rem;" disabled="@(RouletteService.GameStatus == Shared.Enums.RouletteGameStatus.Playing ? true : false)">
            Play new game
        </button>
        
        <button @onclick="@(() => RouletteService.StopRouletteGame())" type="button" class="btn btn-sm btn-primary p-2 p-sm-4 lead" style="font-size: 0.88rem;" disabled="@(RouletteService.GameStatus == Shared.Enums.RouletteGameStatus.Playing ? false : true)">
            Stop game
        </button>        

    </diV>

</div>

@code {

    protected override Task OnInitializedAsync()
    {
        this.RouletteService.OnStopRouletteGame += OnStopRouletteGame;
        return base.OnInitializedAsync();
    }

    public void OnStopRouletteGame()
    {
        this.StateHasChanged();
    }

    public void Dispose()
    {
        this.RouletteService.OnStopRouletteGame -= OnStopRouletteGame;
    }
}
