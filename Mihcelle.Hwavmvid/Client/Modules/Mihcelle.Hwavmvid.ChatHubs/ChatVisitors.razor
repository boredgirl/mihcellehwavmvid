@namespace Mihcelle.Hwavmvid.Modules.ChatHubs
@inherits ComponentBase
@implements IDisposable

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.SignalR.Client
@using Mihcelle.Hwavmvid.Modules.ChatHubs.Services
@using Oqtane.ChatHubs.Models
@using System.Collections.Generic
@using System.Linq
@using Mihcelle.Hwavmvid.Client.Modules

@inject ChatHubService ChatHubService

<AuthorizeView>
    <Authorizing>

        <text>loading items..</text>

    </Authorizing>
    <Authorized>

        @if (ChatHubService.Connection != null && ChatHubService.Connection.State == HubConnectionState.Connected && ChatHubService.Display.Items != null)
        {

            <div class="p-2 bg-white w-100 mb-0 mb-sm-2 border border-primary">
                <div class="p-0 p-sm-1">

                    <div class="accordion accordion-flush" id="accordionFlushExample">
                        <div class="accordion-item">
                            <h2 class="accordion-header" id="flush-headingOne">
                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flush-collapseOne" aria-expanded="false" aria-controls="flush-collapseOne">
                                    Last 24 hours visitors display with total visitors of @(ChatHubService.Display.Items.SelectMany(item => item).Select(item => item.Key).Count())
                                </button>
                            </h2>
                            <div id="flush-collapseOne" class="accordion-collapse collapse" aria-labelledby="flush-headingOne" data-bs-parent="#accordionFlushExample">
                                
                                <div class="accordion-body">
                                    <div class="d-flex flex-wrap bd-highlight">

                                        @foreach (var list in ChatHubService.Display.Items)
                                        {
                                            <div class="p-1">
                                                <button class="btn btn-primary btn-md px-2 py-4" style="min-width:142px;" type="button" disabled>

                                                    <span class="spinner-grow spinner-grow-sm" role="status" aria-hidden="true"></span>   
                                                    
                                                    <span class="lead">
                                                        at @list.FirstOrDefault().Value.CreatedOn.ToString("hh tt")<br />
                                                        @list.Count() site visits
                                                    </span>
                                                </button>
                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        }

    </Authorized>
</AuthorizeView>

@code {

    protected override void OnInitialized()
    {
        this.ChatHubService.OnUpdateUI += (object sender, EventArgs e) => UpdateUI(sender, e);
        base.OnInitialized();
    }

    public void UpdateUI(object sender, EventArgs e)
    {
        InvokeAsync(() =>
        {
            this.StateHasChanged();
        });
    }

    public void Dispose()
    {
        this.ChatHubService.OnUpdateUI -= (object sender, EventArgs e) => UpdateUI(sender, e);
    }
}
