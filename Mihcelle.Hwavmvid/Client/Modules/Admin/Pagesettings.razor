@inherits Indexbase

@using System.Linq
@using System.Collections.Generic
@using Mihcelle.Hwavmvid.Client.Pages
@using Mihcelle.Hwavmvid.Pager
@using Mihcelle.Hwavmvid.Shared.Models
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

@inject Pagerservice<Applicationpage> pagerservice


<AuthorizeView>
    <Authorized>

        <div class="container">
            <div class="row align-items-center my-2">

                <div class="col-lg-4">
                    <div class="text-center">
                        <strong>Context page</strong>
                    </div>
                </div>

                <div class="col-lg-8">
                    <div class="p-1 bg-light">
                        @_contextpage?.Name
                    </div>
                </div>

                <div class="col-lg-12">
                    
                    @{
                        var getItemsApiUrl = string.Concat(this.navigationmanager.BaseUri, "api/page");
                    }

                    @if (this._contextsite != null)
                    {

                        <Pagercomponent ApiQueryId="@this._contextsite?.Id" HubConnectionId="@string.Empty" ElementId="Mihcellehwavmvidpages" GetItemsApiUrl="@getItemsApiUrl" ContextPageItems="@apppages" Context="contextitem" ItemsPerPage="14" TItemGeneric="@Applicationpage" Class="py-sm-3" Scrolling="@false">
                            <PagerItem>

                                <div class="d-flex" style="background-color: lightgoldenrodyellow; border-bottom: 1px solid #f1f1f1;">
                                    <div class="flex-fill">
                                        <button type="button" class="btn btn-sm btn-link">@contextitem.Name</button>
                                    </div>
                                    <div class="flex-fill text-start">
                                        <button type="button" @onclick="@(() => this.pagerservice.RemoveItem(contextitem, this._contextsite?.Id))" class="btn btn-sm btn-danger">
                                            <span aria-hidden="true" style="font-size: 1.4rem; line-height: 0;">&times;</span> Remove Ignore
                                        </button>
                                    </div>
                                </div>

                            </PagerItem>
                        </Pagercomponent>

                    }

                </div>

            </div>
        </div>

    </Authorized>
    <NotAuthorized>

    </NotAuthorized>
</AuthorizeView>


@code {


    public List<Applicationpage> apppages { get; set; } = new List<Applicationpage>();

    protected override async Task OnInitializedAsync()
    {
        this.pagerservice.OnRetrievedItems += RetrievedItems;
        this.pagerservice.OnRemoveItem += RemoveItem;
        this.pagerservice.OnError += Error;
        await base.OnInitializedAsync();
    }

    public void RetrievedItems(List<Applicationpage> obj, string apiQueryId)
    {
        if (apiQueryId.ToString() == _contextsite?.Id)
        {
            //this.ChatHubService.IgnoredUsers.AddRange(obj);
            //this.ChatHubService.RunUpdateUI();
        }
    }

    public async void RemoveItem(Pagerevent<Applicationpage> obj)
    {
        if (obj.ApiQueryId.ToString() == _contextsite?.Id)
        {
            //await this.ChatHubService.UnignoreUser(obj.Item.ChatHubIgnoredUserId);
            //this.ChatHubService.IgnoredUsers.Remove(obj.Item);
            //this.ChatHubService.RunUpdateUI();
        }
    }

    public void Error(Exception exception, string apiQueryId)
    {
        if (_contextsite?.Id == apiQueryId.ToString())
        {
            //this.ChatHubService.HandleException(exception);
        }
    }

    public void Dispose()
    {
        this.pagerservice.OnRetrievedItems -= RetrievedItems;
        this.pagerservice.OnRemoveItem -= RemoveItem;
        this.pagerservice.OnError -= Error;
    }
}
