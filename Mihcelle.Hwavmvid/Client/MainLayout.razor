@inherits Mainlayoutbase
@inject IHttpClientFactory httpclientfactory

@if (!this.framework_installed)
{
    <Mihcelle.Hwavmvid.Client.Installation.Installationcomponent></Mihcelle.Hwavmvid.Client.Installation.Installationcomponent>
}

@if (this.framework_installed)
{
    <div class="mihcelle-hwavmvid-container">

        <header>
            <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
                <div class="container-fluid">

                    <a class="navbar-brand" href="#">@Configuration["framework:name"]@Configuration["framework:version"]</a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav mr-auto">
                            <li class="nav-item">
                                <a class="nav-link disabled" href="#">@Configuration["framework:description"]</a>
                            </li>
                        </ul>
                        <ul class="navbar-nav ms-auto">

                            @if (this._context?.User?.Identity?.IsAuthenticated ?? false)
                            {
                                <li class="nav-item">
                                    <a class="nav-link" href="/admin">Admin</a>
                                </li>
                            }

                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @if (this._context?.User?.Identity?.IsAuthenticated ?? false)
                                    {
                                        <span>☑@_context.User.Identity.Name</span>
                                    }
                                    else
                                    {
                                        <span>Account / Login</span>
                                    }
                                </a>
                                <ul class="dropdown-menu" style="left: auto !important; right: 0;">
                                    <li>
                                        <div class="p-2 p-sm-4" style="min-width: 410px;">
                                            <Accountdropdowncomponent></Accountdropdowncomponent>
                                        </div>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </nav>
        </header>

        <main class="container-fluid">
            @Body
        </main>

    </div>
}

@code{


    protected override async Task OnInitializedAsync()
    {

        try
        {
            var client = this.httpclientfactory.CreateClient("Mihcelle.Hwavmvid.ServerApi.Unauthenticated");
            var response = await client.GetAsync("api/installation/");
            var stng = await response.Content.ReadAsStringAsync();
            this.framework_installed = Convert.ToBoolean(stng);
            await this.Updatemainlayout();
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception.Message);
        }

        await base.OnInitializedAsync();
    }

}